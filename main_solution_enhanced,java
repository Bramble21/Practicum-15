// Practicum 15 - Membership Fee Program (Improved Version)
// -----------------------------------------------------------
// This version of the program adds input error checking.
//
// The original version of the program does not check for
// invalid input (i.e., membership level other than 1,2 or 3
// or Y/N response of other than 'y', 'Y', 'n', or 'N'). This
// improved version of the program is written to catch such
// errors.
// -----------------------------------------------------------
//
// This program should prompt the user for one of three 
// membership levels for an online site AND whether they are
// a student or not.
//
//    1 - Standard Membership
//    2 - Enhanced Membership
//    3 - Pro Membership
//
// The membership fees are $5.00/month for Standard membership,
// $10.00/month for Enhanced membership and $25.00/month for Pro 
// membership. Students get a 50% discount on all memberships.
//
// REQUIRED INPUT:
// Must prompt for membership level first (1, 2 or 3).
// Must then prompt if a student (input of "y","Y","n" or "N").
//
// REQUIRED OUTPUT:
// The program MUST display the results formatted as follows:
//
//   Standard Membership Fee: $5.00/month
//   OR
//   Standard Membership Fee: $2.50/month (student)
//   OR
//   Enhanced Membership Fee: $10.00/month
//   OR
//   etc.
//
// --------------------------------------------------------------
import java.util.Scanner;
import java.util.InputMismatchException;

public class Main {

    public static void main(String[] args) {

        // constant declarations
        // NOTE: The use of these "named constants" makes the
        //       program more readable easier to modify fees
        final double standard_membership_fee = 5.00;
        final double enhanced_membership_fee = 10.00;
        final double pro_membership_fee = 25.00;
        final double student_discount = 0.5;  // 50% discount
      
        // var declarations
        // variable membership_level must now be initialized in
        // this version of the program since the assignment occurs
        // within a while loop, which Java considers may never be
        // executed.
        int membership_level = 1;

        // NOTE: If fee1/fee2 not initialized to a value here,
        // Java will give a "variable not initialized" error.
        // This is because in the code below fee1 and fee2 may
        // possibly not be assigned a value if membership_level
        // is not 1, 2 or 3.
      
        double fee1 = 0.0; 
        double fee2 = 0.0;

        // variable is_student must now be initialized in this
        // version of the program since the assignment occurs
        // within a while loop, which Java considers may never
        // be executed.
        boolean is_student = true;
      
        boolean valid_input = false;
        boolean valid_membership_level = false;
        boolean valid_YN_response = false;
        String yn_response;
        String membership_type = "";
        String student_label = "";
        String output_line = "";
     
        Scanner input = new Scanner(System.in);

        while(!valid_input) {
          try {
            // prompt user for value membership level
            if(!valid_membership_level) {
              System.out.print("\nWhat membership level (1, 2 or 3)? ");
              membership_level = input.nextInt();
  
              // this method call will throw an exception object
              // only if the membership level is not within 1-3.
              // If an exception is thrown, the program execution 
              // will jump to the catch statements below and not
              // execute the lines of code following it.
              validateMembershipLevel(membership_level);

              valid_membership_level = true;
              
              // scan past lingering end-of-line character
              input.nextLine();
            }

            if(!valid_YN_response) {
              // ask if a student
              System.out.print("Are you a student? (y/Y, n/N): ");
              yn_response = input.nextLine();
  
              // If an exception is thrown, the program execution 
              // will jump to the catch statements below and not
              // execute the lines of code following it.
              validateYNResponse(yn_response);

              valid_YN_response = true;
      
              if(yn_response.toUpperCase().equals("Y"))
                is_student = true;
              else
                is_student = false;
            }
            
            // The only way that execution reaches this point
            // is if no exceptions where thrown. Therefore,
            // this is the point to set valid_input to true
            // to stop the prompting for input.
            valid_input = true;
          }
          catch(InvalidMembershipLevelException e) {
            System.out.println(
                "Please enter a membership level of 1, 2 or 3");
          }
          catch(InputMismatchException e) {
            System.out.println(
                "Non-digit character found - please reenter");
            input.nextLine();
          }
          catch(InvalidYNResponseException e) {
            System.out.println(
                "Please enter y/Y or n/N");
          }
        }

        // use nested if statements to determine membership fee
        // and assign to variable fee1
        if(membership_level == 1) {
          fee1 = standard_membership_fee;
          membership_type = "Standard";
        }
        else
        if(membership_level == 2) {
          fee1 = enhanced_membership_fee;
          membership_type = "Enhanced";
        }
        else
        if(membership_level == 3) {
          fee1 = pro_membership_fee;
          membership_type = "Pro";
        }
    
        // apply applicable student discount
        if(is_student)
          fee1 = student_discount * fee1;
          
        // use switch statement to determine membership fee
        // and assign to variable fee2
        switch(membership_level) {
          case 1: fee2 = standard_membership_fee; 
                         membership_type = "Standard"; break;
          case 2: fee2 = enhanced_membership_fee; 
                         membership_type = "Enhanced"; break;
          case 3: fee2 = pro_membership_fee; 
                         membership_type = "Pro"; break;
        }

        if(is_student)
          fee2 = student_discount * fee2;
      
        // display results
        if(is_student)
          student_label = " (student)";

        // Note: If variable student_label contains the empty string,
        // then has no affect on what is output
        output_line = membership_type + " Membership Fee: $%.2f/month" +
                      student_label + "\n";
        
        System.out.println("\nResult of nested if statements:");
        System.out.printf(output_line, fee1);
      
        System.out.println("\nResult of switch statement:");
        System.out.printf(output_line, fee2);
    }

    public static void validateMembershipLevel(int value) throws 
                                   InvalidMembershipLevelException {
    // --------------------------------------------------------------
    // This method throws an InvalidMembershipLevelException object
    // if the value passed it not within 1-3, inclusive. Otherwise,
    // this method call has no effect.
    // --------------------------------------------------------------
      if(value < 1 || value > 3)
        throw new InvalidMembershipLevelException();
    }

    public static void validateYNResponse(String response) throws 
                                   InvalidYNResponseException {
    // --------------------------------------------------------------
    // This method throws an InvalidYNResponseException object
    // if the value passed it not "y", "Y", "n", or "N". Otherwise,
    // this method call has no effect.
    // --------------------------------------------------------------
      if(!response.toUpperCase().equals("Y") &&
         !response.toUpperCase().equals("N"))
        throw new InvalidYNResponseException();
    }
}
